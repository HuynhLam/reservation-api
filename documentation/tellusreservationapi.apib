FORMAT: 1A
HOST: http://localhost:5000

# Tellus Reservation API

The room reservation RESTful API allows both human and non-human agents to real-time make booking, retrieve and manipulate room bookings, 
rooms and users information for their own purposes.
The core component of the API is Booking, which manages the available booking, booking reserved at that time and booking history. 
Users include university students and staffs, can select a room, make booking, and edit their booking.
**Only user accounts registered by University of Oulu IT service can use the system.** 
This authentication process is done externally as in a RESTful API REST does not have login or sessions so, 
authentication is not necessary for the scope of this project. 

# Group Link Relations 

This document uses IANA standard link relations (http://www.iana.org/assignments/link-relations/link-relations.xhtml). 
In addition the following link relations have been defined:

## add-user [/link-relations/add-user]

Creates a new user. Use via POST.

### GET

Return the link relation description in HTML format
+ Response 200 (text/html)

## delete [/link-relations/delete]

Deletes the current context. Use via DELETE.

### GET

Return the link relation description in HTML format
+ Response 200 (text/html)

## rooms-all [/link-relations/rooms-all]

This action list all rooms in Tellus. Each item is an instance of the type Room defined in the profile [Room](profiles/room_profile). 
Can only be accessed through GET.

### GET

Return the link relation description in HTML format
+ Response 200 (text/html)

## modify-room [/link-relations/modify-room]

This action modifies the picture and room resources details of a specific room. 
Each item is an instance of the type Room defined in the profile [Room](profiles/room_profile). 
Can only be accessed through PUT.

### GET

Return the link relation description in HTML format
+ Response 200 (text/html)

## bookings-all [/link-relations/bookings-all]

This action list all bookings in the reservation system. 
Each item is an instance of the type Booking defined in the profile [Booking](profiles/booking_profile). 
Can only be accessed through GET.

### GET

Return the link relation description in HTML format
+ Response 200 (text/html)

## modify-booking [/link-relations/modify-booking]

This action modifies the room name, date, time, first name, last name, email, contact number details of a specific existing booking. 
Each item is an instance of the type Booking defined in the profile [Booking](profiles/booking_profile). 
Can only be accessed through PUT.

### GET

Return the link relation description in HTML format
+ Response 200 (text/html)

## add-booking [/link-relations/add-booking]

Creates a new booking. Use via POST.

### GET

Return the link relation description in HTML format
+ Response 200 (text/html)

## history-bookings [/link-relations/history-bookings]

This action list list of 30 latest successful bookings. 
Each item is an instance of the type Booking defined in the profile [Booking](profiles/booking_profile). 
Can only be accessed through GET.

### GET

Return the link relation description in HTML format
+ Response 200 (text/html)




# Group Profiles

## Room Profile [/profiles/room_profile]

Profile definition for all rooms related resources.

### Dependencies

This profile inherits:
 * Some semantic descriptors from [schema.org/Article](http://schema.org/MeetingRoom)

### Link relations

 * [modify-room](reference/link-relations/modify-room)

### Semantic Descriptors

#### Data Type Room

 * `resources` (string): List of resources available in the room such as projector etc.

Inherited from [schema.org/Article](http://schema.org/MeetingRoom)
 * `name`(string): See [https://schema.org/name](https://schema.org/name)
 * `photo` (string): See[https://schema.org/photo](https://schema.org/photo)

### GET

Return the Message Profile in HTML format
+ Response 200 (text/html)


## Error Profile [/profiles/error_profile]

Profile definition for all errors messages in the system

+ Attributes 
    + resource_url (string, required) - A url of the resource generating the error

### GET

Return the Error Profile in HTML format
+ Response 200 (text/html)

## User Profile [/profiles/user_profile]

Profile definition for all user resources.

### Dependencies

This profile inherits:
 * Some semantic descriptors from [https://schema.org/Person](https://schema.org/Person)

### Link relations

 * [add-user](reference/link-relations/add-user)
 * [bookings-all](reference/link-relations/bookings-all)
 * [delete](reference/link-relations/delete)

### Semantic Descriptors

#### Data Type User

 * `username` (string): Username of a user. 
 * `isAdmin` (boolean): Account type to identify User or Admin.
 
Inherited from [schema.org/Person](http://schema.org/Person)
 * `email` (string):See [http://schema.org/email](http://schema.org/email)
 * `familyName` (string):See [http://schema.org/familyName](http://schema.org/familyName)
 * `givenName` (string):See [http://schema.org/givenName](http://schema.org/givenName)
 * `telephone` (string):See [http://schema.org/telephone](http://schema.org/telephone)



### GET

Return the User Profile in HTML format
+ Response 200 (text/html)

## Booking Profile [/profiles/booking_profile]

Profile definition for all booking resources.

### Dependencies

This profile inherits:
 * Some semantic descriptors from [https://schema.org/Reservation](https://schema.org/Reservation)
 * Some semantic descriptors from [https://schema.org/Person](https://schema.org/Person)
 * Some semantic descriptors from [schema.org/Article](http://schema.org/MeetingRoom)

### Link relations

 * [add-booking](reference/link-relations/add-booking)
 * [bookings-all](reference/link-relations/bookings-all)
 * [modify-booking](reference/link-relations/modify-booking)
 * [delete](reference/link-relations/delete)

### Semantic Descriptors

#### Data Type Booking

 * `username` (string): Username of a user. 
 
Inherited from [schema.org/Reservation](http://schema.org/Reservation)
 * `bookingTime` (string):See [https://schema.org/bookingTime](https://schema.org/bookingTime)

Inherited from [schema.org/Person](http://schema.org/Person)
 * `email` (string):See [http://schema.org/email](http://schema.org/email)
 * `familyName` (string):See [http://schema.org/familyName](http://schema.org/familyName)
 * `givenName` (string):See [http://schema.org/givenName](http://schema.org/givenName)
 * `telephone` (string):See [http://schema.org/telephone](http://schema.org/telephone)

Inherited from [schema.org/Article](http://schema.org/MeetingRoom)
 * `name`(string): See [https://schema.org/name](https://schema.org/name)



### GET

Return the User Profile in HTML format
+ Response 200 (text/html)


# Group Rooms

All these resources use the [Room Profile](reference/profiles/room_profile).

In addition all error messages follow the profile defined [Error Profile](reference/profiles/error_profile)




## Rooms List [tellus/api/rooms]

A list of all rooms in Tellus.

### Rooms List [GET]

Get the list of all Rooms in the system.

+ Relation: self    
+ Request
    
    + Headers
    
            Accept: application/vnd.mason+json
    
+ Response 200 (application/vnd.mason+json)

    Rooms list was successfully retrieved.
   
    + Body 
    
            {
                "@namespaces": {
                    "tellus": {
                        "name": "/tellus/link-relations/"
                    }
                },
                
                "items": [
                    {
                        "name": "", 
                        "photo": "",
                        "resources": "",
                        "@controls": {
                            "self": {
                                "href": "/tellus/api/rooms/ROOMNAME"
                            },
                            "profile": {
                                "href": "/profiles/room_profile/"
                            }                            
                        }
                    },
                    {
                        "name": "", 
                        "photo": "",
                        "resources": "",
                        "@controls": {
                            "self": {
                                "href": "/tellus/api/rooms/ROOMNAME"
                            },
                            "profile": {
                                "href": "/profiles/room_profile/"
                            }                            
                        }
                    }
                ],
                
                "@controls": {
                    "self": {
                        "href": "/forum/api/rooms/"
                    },
                    "forum:add-message": {
                        "title": "Create message",
                        "href": "/forum/api/messages/",
                        "encoding": "json",
                        "method": "POST",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "headline": {
                                    "title": "Headline",
                                    "description": "Message headline",
                                    "type": "string"
                                },
                                "articleBody": {
                                    "title": "Contents",
                                    "description": "Message contents",
                                    "type": "string"
                                },
                                "author": {
                                    "title": "Author",
                                    "description": "Nickname of the message author",
                                    "type": "string"
                                },
                            },
                            "required": ["headline", "articleBody"]
                        }
                    },
                    "forum:users-all": {
                        "title": "List users", 
                        "href": "/forum/api/users/"
                    }
                }
            }
    

### Create a new message initiating a thread [POST]       

Create a new message, utilized as a parent thread. 

If the attribute `author` is not included the system will consider it as `Anonymous` user. 

+ Request (application/json)

    + Headers
    
            Accept: application/vnd.mason+json
        
    + Body 
    
            {
                "headline": "Do not use IE",
                "articleBody": "Do not try to fix what others broke",
                "author": "HockeyFan"
            }

+ Response 201

    The message is created correctly. 
        
    + Headers
                
            Location: URL of the new created resource

+ Response 400 (application/vnd.mason+json)

    The message is not well formed. Some of the parameters is not correctly received. 
    
    + Body
    
            {
                "@error": {
                    "@message": "Wrong request format"
                    "@messages": [
                        "Be sure you include message title and body"
                    ]
                }
                "resource_url": "/forum/api/messages/"
            }


+ Response 415 (application/vnd.mason+json)

    The server cannot understand the format of the response.
    
    + Body 
    
            {
                "@error": {
                    "@message": "Unsupported media type"
                    "@messages": [
                        "Use a JSON compatible format"
                    ]
                }
                "resource_url": "/forum/api/messages/"
            }

+ Response 500  (application/vnd.mason+json)

    The server cannot store the message in the database.
    
    + Body 

            {
                "@error": {
                    "@message": "Problem with the database"
                    "@messages": [
                        "Cannot access the database"
                    ]
                }
                "resource_url": "/forum/api/messages/"
            }
        
## Message [/forum/api/messages/{messageid}]

A message stored in the Forum database. A message contains a title which describes the information of the message,
the body (the message itself), information about the sender and a unique id that identifies this message in the database.
Some messages might contain links to other messages (one message is the reply of another).

+ Parameters 
    + messageid: `msg-1` (string)   - The id of the new message. Using regex syntax this parameter follows format: msg-\d+

### Receive message information [GET]

Receives the information of a particular message

+ Relation: self
+ Request
    
    + Headers
    
            Accept: application/vnd.mason+json
    
+ Response 200 (application/vnd.mason+json)

    Message correctly retrieved

    + Body 
    
            {
                "@namespaces": {
                    "forum": {
                        "name": "/forum/link-relations/"
                    },
                    "atom-thread": {
                        "name": "https://tools.ietf.org/html/rfc4685"
                    }
                },
                
                "articleBody": "I am using a float layout on my website but I've run into some problems with Internet Explorer. I have set the left margin of a float to 100 pixels, but IE uses a margin of 200px instead. Why is that? Is this one of the many bugs in IE?",
                "author": "AxelW",
                "headline": "CSS: Margin problems with IE",
                "editor": null,
                
                "@controls": {
                    "self": {
                        "href": "/forum/api/messages/msg-1/"
                    },
                    "profile": {
                        "href": "/profiles/message-profile/"
                    },
                    "author": {
                        "href": "/forum/api/users/AxelW/"
                    },
                    "collection": {
                        "href": "/forum/api/messages/"
                    },
                    "edit": {
                        "title": "Edit this message",
                        "href": "/forum/api/messages/msg-1/",
                        "encoding": "json",
                        "method": "GET",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "headline": {
                                    "title": "Headline",
                                    "description": "Message headline",
                                    "type": "string"
                                },
                                "articleBody": {
                                    "title": "Contents",
                                    "description": "Message contents",
                                    "type": "string"
                                },
                                "editor": {
                                    "title": "Editor",
                                    "description": "Nickname of the last person to edit the message",
                                    "type": "string"
                                }
                            },
                            "required": ["headline", "articleBody"]
                        }
                    },
                    "forum:delete": {
                        "href": "/forum/api/messages/msg-1/",
                        "method": "DELETE"
                    },
                    "forum:reply": {
                        "title": "Reply to this message",
                        "href": "/forum/api/messages/msg-1/",
                        "encoding": "json",
                        "method": "POST",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "headline": {
                                    "title": "Headline",
                                    "description": "Message headline",
                                    "type": "string"
                                },
                                "articleBody": {
                                    "title": "Contents",
                                    "description": "Message contents",
                                    "type": "string"
                                },
                                "author": {
                                    "title": "Author",
                                    "description": "Nickname of the message author",
                                    "type": "string"
                                },
                            },
                            "required": ["headline", "articleBody"]
                        }
                    }
                }
            }
    
+ Response 404 (application/vnd.mason+json)

    The message with id `messageid` does not exist in the database.
        
    + Body 
    
            {
                "@error": {
                    "@message": "Message does not exist"
                    "@messages": [
                        "There is no a message with id msg-1"
                    ]
                }
                "resource_url": "/forum/api/messages/msg-1/"
            }

### Delete a message [DELETE]

Delete a message from the system

+ Request
    
    + Headers
    
            Accept: application/vnd.mason+json
    
+ Response 204

    The message was successfully deleted
        
    + Body 
        

+ Response 404 (application/vnd.mason+json)

    The message with id `messageid` does not exist in the database.
        
    + Body 
    
            {
                "@error": {
                    "@message": "Message does not exist"
                    "@messages": [
                        "There is no a message with id msg-1"
                    ]
                }
                "resource_url": "/forum/api/messages/msg-1"
            }

### Edit a message [PUT]       

Edit the information of a message. The field  `editor` should be included, otherwise the system answers with status code 404.

+ Request (application/json)

    + Headers
    
            Accept: application/vnd.mason+json
        
    + Body 
    
            {
                "headline": "Do not use IE",
                "articleBody": "Do not try to fix what others borked",
                "editor": "HockeyFan"
            }


+ Response 204

    The message is modified correctly
        
    + Body

+ Response 400 (application/vnd.mason+json)

    The message is not well formed. Some of the parameters is not correctly received. 
    
    + Body
    
            {
                "@error": {
                    "@message": "Wrong request format"
                    "@messages": [
                        "Be sure you include message title and body"
                    ]
                }
                "resource_url": "/forum/api/messages/msg-1/"
            }

+ Response 404 (application/vnd.mason+json)

    The message with id `messageid` does not exist in the database.
        
    + Body 
    
            {
                "@error": {
                    "@message": "Message does not exist"
                    "@messages": [
                        "There is no a message with id msg-1/"
                    ]
                }
                "resource_url": "/forum/api/messages/msg-1"
            }

+ Response 415 (application/vnd.mason+json)

    The server cannot understand the format of the response.
    
    + Body 
    
            {
                "@error": {
                    "@message": "Unsupported media type"
                    "@messages": [
                        "Use a JSON compatible format"
                    ]
                }
                "resource_url": "/forum/api/messages/msg-1/"
            }

+ Response 500  (application/vnd.mason+json)

    The server cannot store the message in the database.
    
    + Body 

            {
                "@error": {
                    "@message": "Problem with the database"
                    "@messages": [
                        "Cannot access the database"
                    ]
                }
                "resource_url": "/forum/api/messages/msg-1/"
            }

### Reply an existing message [POST]       

Create a new message replying the message with id `messageid`. 
If the attribute `author` is not included the system will consider it as `Anonymous` user. 

+ Relation: reply
+ Request (application/json)

    + Headers
    
            Accept: application/vnd.mason+json
        
    + Body 
    
            {
                "headline": "Do not use IE",
                "articleBody": "Do not try to fix what others borked",
                "editor": "HockeyFan"
            }

+ Response 201

    The message is created correctly. 
        
    + Headers
                
            Location: URL of the new created resource

+ Response 400 (application/vnd.mason+json)

    The message is not well formed. Some of the parameters is not correctly received. 
    
    + Body
    
            {
                "@error": {
                    "@message": "Wrong request format"
                    "@messages": [
                        "Be sure you include message title and body"
                    ]
                }
                "resource_url": "/forum/api/messages/msg-1/"
            }

+ Response 404 (application/vnd.mason+json)

    The message with id `messageid` does not exist in the database.
        
    + Body 
    
            {
                "@error": {
                    "@message": "Message does not exist"
                    "@messages": [
                        "There is no a message with id msg-1"
                    ]
                }
                "resource_url": "/forum/api/messages/msg-1/"
            }

+ Response 415 (application/vnd.mason+json)

    The server cannot understand the format of the response.
    
    + Body 
    
            {
                "@error": {
                    "@message": "Unsupported media type"
                    "@messages": [
                        "Use a JSON compatible format"
                    ]
                }
                "resource_url": "/forum/api/messages/msg-1/"
            }

+ Response 500  (application/vnd.mason+json)

    The server cannot store the message in the database.
    
    + Body 

            {
                "@error": {
                    "@message": "Problem with the database"
                    "@messages": [
                        "Cannot access the database"
                    ]
                }
                "resource_url": "/forum/api/messages/msg-1/"
            }

#Group Users
All these resources use [User Profile](reference/profiles/user_profile).

In addition all error messages follow the profile defined [Error Profile](reference/profiles/error_profile)

## Users List [/api/users]

A list of all the users registered in the Forum.

### List users [GET]

Get a list of all users in the system
    
+ Request
    
    + Headers
    
            Accept: application/vnd.mason+json
    
+ Response 200 (application/vnd.mason+json)
    
    + Body 
    
            {

                "@namespaces": {
                    "forum": {
                        "name": "/forum/link-relations/"
                    }
                },
                

                "items": [
                    {
                        "nickname": "Mystery",
                        "registrationdate": 1362015937,
                        "@controls": {
                            "self": {
                                "href": "/forum/api/users/Mystery/",                                
                            },
                            "profile": {
                                "self": "/profiles/user-profile/"
                            },
                            "forum:messages-history": {
                                "title": "Message history",                    
                                "href": "/forum/api/users/Mystery/history{?length,before,after}",
                                "isHrefTemplate": true, 
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "after": {
                                            "description": "Find messages after (timestamp as seconds)", 
                                            "type": "integer"
                                        }, 
                                        "before": {
                                            "description": "Find messages before (timestamp as seconds)", 
                                            "type": "integer"
                                        }, 
                                        "length": {
                                            "description": "Maximum number of messages returned", 
                                            "type": "integer"
                                        }
                                    },                   
                                    "required": []
                                }
                            }
                        }
                    },
                    {
                        "nickname": "AxelW",
                        "registrationdate": 1357724086,
                        "@controls": {
                            "self": {
                                "href": "/forum/api/users/AxelW/",
                            },
                            "profile": {
                                "self": "/profiles/user-profile/"
                            },
                            "forum:messages-history": {
                                "title": "Message history",                    
                                "href": "/forum/api/users/AxelW/history{?length,before,after}",
                                "isHrefTemplate": true,
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "after": {
                                            "description": "Find messages after (timestamp as seconds)", 
                                            "type": "integer"
                                        }, 
                                        "before": {
                                            "description": "Find messages before (timestamp as seconds)", 
                                            "type": "integer"
                                        }, 
                                        "length": {
                                            "description": "Maximum number of messages returned", 
                                            "type": "integer"
                                        }
                                    },                   
                                    "required": []
                                }
                            }
                        }
                    }
                ],
                
                "@controls": {
                    "self": {
                        "href": "/forum/api/users/"
                    },
                    "forum:add-user": {
                        "title": "Create user",
                        "href": "/forum/api/users/",
                        "encoding": "json",
                        "method": "POST",
                        "schemaUrl": "/forum/schema/user/"
                    },
                    "forum:messages-all": {
                        "href": "/forum/api/messages/",
                        "title": "All messages"
                    }
                }
            }

### Register a user [POST]       

Create a new user. Note that in the example the properties telephone, skype and image are not included in the request example.

+ Request (application/json)

    Note that in the example the properties `telephone`, `skype` and `image` are not included in the request example.

    + Headers
    
            Accept: application/vnd.mason+json
        
    + Body 
    
            {
                "nickname": "SuperDonkey",
                "address": {
                    "addressLocality": "Palencia",
                    "addressCountry": "Spain"
                },
                "avatar": "file2.jpg",
                "birthDate": "1990-10-12",
                "email": "john@notanyone.com",
                "familyName": "DonNadie",
                "gender": "male",
                "givenName": "John",
                "signature": "What is born in Palencia stays in Palencia",
                "website": "http://nothingisnothin.com"
            }

+ Response 201

    The user is created correctly. 
        
    + Headers
                
            Location: URL of the new created resource

+ Response 400 (application/vnd.mason+json)

    The message is not well formed. Some of the parameters is not correctly received. 
    
    + Body
    
            {
                "@error": {
                    "@message": "Wrong request format",
                    "@messages": [
                        "Be sure you include all mandatory properties"
                    ]
                }
                "resource_url: "/forum/api/users/"
            }

+ Response 409 (application/vnd.mason+json)

    Exists a user when the same nickname
    
    + Body
    
            {
                "@error": {
                    "@message": "Reserved nickname",
                    "@messages": [
                        "There is already a user with same nickname: AxelW"
                    ]
                }
                "resource_url: "/forum/api/users/"
            }

+ Response 415 (application/vnd.mason+json)

    The server cannot understand the format of the response.
    
    + Body 
    
            {
                "@error": {
                    "@message": "Unsupported media type",
                    "@messages": [
                        "Use a JSOn compatible format"
                    ]
                }
                "resource_url": "/forum/api/users/",
            }


+ Response 500 (application/vnd.mason+json)

    The server cannot store the user in the database.
    
    + Body 
    
            {
                "@error": {
                    "@message": "Problem with the database"
                    "@messages": [
                        "Cannot access the database"
                    ]
                }
                "resource_url": "/forum/api/users/",
            }

## User [/api/users/{nickname}]

A user is a member of the Forum. A user can send messages to the Forum. Each user has a unique nickname that serves as a unique identifier in the system. 
One user cannot register using an existing nickname. Anyone can register in the Forum to become a user. 

The user profile information is splitted in two different resources [User's public profile](reference/users/users-public-profile) and [User's private profile](references/users/users-private-profile) 

Note that a user is read-only in the [Users](reference/users/users-list) collection. Hence, it cannot be modified nor deleted unless the corresponding link relation is included in the body of the user.

+ Parameters 
    + nickname: `AxelW` (string)   - The nickname of the user to search for.

### Receive user information [GET]

Receives the information of a particular user

+ Relation: self
+ Request
    
    + Headers
    
            Accept: application/vnd.mason+json
    
+ Response 200 (application/vnd.mason+json)

    The nickname exists.

    + Body

            {
                "@namespaces": {
                    "forum": {
                        "name": "/forum/link-relations/"
                    }
                },
                "@controls": {
                    "self": {
                        "href": "/forum/api/users/<nickname>/"
                    },
                    "forum:add-user": {
                        "title": "Create user",
                        "href": "/forum/api/users/",
                        "encoding": "json",
                        "method": "POST",
                        "schemaUrl": "/forum/schema/user/"
                    },
                    "forum:messages-all": {
                        "href": "/forum/api/messages/",
                        "title": "All messages"
                    }
                }
            }
    
+ Response 404 (application/vnd.mason+json)

    The nickname is not stored in the system.
        
    + Body 
    
            {
                "@error": {
                    "@message": "User does not exist"
                    "@messages": [
                        "There is no a user with nickname AxelW"
                    ]
                }
                "resource_url": "/forum/api/users/AxelW/"
            }

### Delete a user [DELETE]

Delete a user from the system

+ Request
    
    + Headers
    
            Accept: application/vnd.mason+json
    
+ Response 204

    The user was successfully deleted
        
    + Body
        

+ Response 404 (application/vnd.mason+json)

    The user with nickname `nickname` does not exist in the database.
        
    + Body 
    
            {
                "@error": {
                    "@message": "User does not exist"
                    "@messages": [
                        "There is no a user with nickname AxelW"
                    ]
                }
                "resource_url": "/forum/api/users/AxelW/"
            }


## User's public profile [/api/users/{nickname}/public_profile]

Users information visible to everybody. Only authorized users can modify this information.

+ Parameters 
    + nickname: `AxelW` (string)   - The nickname of the user

### Get user's public profile [GET]

+ Response 501
    
        TO BE DEFINED

### Modify user's public profile [PUT]

+ Request 

        TO BE DEFINED

+ Response 501

        TO BE DEFINED

## User's private profile  [/api/users/{nickname}/restricted_profile/]

Users information only visible to forum administration staff. Only user itself and administrators can modify this information.

+ Parameters 
    + nickname: `AxelW` (string)   - The nickname of the user

### Get user's restricted profile [GET]

+ Response 501
    
        TO BE DEFINED

### Modify user's restricted profile [PUT]

+ Request 

        TO BE DEFINED

+ Response 501

        TO BE DEFINED

## User's history [/api/users/{nickname}/history{?length,before,after}]

List of messages sent by a user. It is the result of an algorithm which searches the messages sent by a specific user.
The algorithm might receive 3 arguments to filter the results: the amount of messages to return, a date to remove all messages before it  and a date to remove all messages after it. 

+ Parameters 
    + nickname: `AxelW` (string)   - The nickname of the user to search for.
    + length: `1` (integer) the number of messages to return.
    + after: `1362317481` (timestamp) the messages returned must have been modified after the time provided in this parameter. Time is UNIX timestamp
    + before: `1362317481` (timestamp) the messages returned must have been modified before the time provided in this parameter. Time is UNIX timestamp

### Receive history information [GET]


+ Relation: self
+ Request
    
    + Headers
    
            Accept: application/vnd.mason+json
    
+ Response 200 (application/vnd.mason+json)

    the list can be generated and it is not empty.

    + Body 

            {
                "@namespaces": {
                    "forum": {
                        "name": "/forum/link-relations/"
                    }
                },

                "items": [
                    {
                        "id": "msg-21",
                        "headline": "Do not use IE",            
                        "@controls": {
                            "self": {
                                "href": "/forum/api/messages/msg-21/"
                            },
                            "profile": {
                                "href": "/profiles/message-profile/"
                            }                            
                        }
                    },
                    {
                        "id": "msg-17",
                        "headline": "Try hello",            
                        "@controls": {
                            "self": {
                                "href": "/forum/api/messages/msg-17/"
                            },
                            "profile": {
                                "href": "/profiles/message-profile/"
                            }                            
                        }
                    }
                ],
                
                "@controls": {
                    "self": {
                        "href": "/forum/api/users/<nickname>/history/"
                    },
                    "forum:messages-history": {
                        "title": "Message history",
                        "href": "/forum/api/messages/",
                        "encoding": "json",
                        "method": "GET",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "length": {
                                    "description": "Maximum number of messages returned",
                                    "type": "integer"
                                },
                                "before": {
                                    "description": "Find messages before (timestamp as seconds)",
                                    "type": "integer"
                                },
                                "after": {
                                    "description": "Find messages after (timestamp as seconds)",
                                    "type": "integer"
                                },
                            },
                            "required": []
                        }
                    }
                }
            }
    
+ Response 404 (application/vnd.mason+json)

    No message meets the requirement.
        
    + Body 
    
            {
                "@error": {
                    "@message": "Messages not found."
                    "@messages": [
                        "There are no messages for nickname AxelW"
                    ]
                }
                "resource_url": "/forum/api/users/AxelW/history/"
            }
            
            **TO BE DEFINED BY STUDENTS**


# Group Booking

All these resources use the [Booking Profile](reference/profiles/booking_profile).

In addition all error messages follow the profile defined [Error Profile](reference/profiles/error_profile)


## Bookings List [/tellus/api/bookings/]

A list of all Bookings. 



## Booking [/tellus/api/bookings/{name}/]

A booking stored in the Bookings database. A booking contains room name which the booking will place, information of user
who currently make the booking (include username, firstname, lastname, email and contact number), the time the booking will
happen and a unique id that identifies this booking in the database.

### Booking [GET]

Get a list of all bookings by room name in the system

+ Relation: self    
+ Request
    
    + Headers
    
            Accept: application/vnd.mason+json
    
+ Response 200 (application/vnd.mason+json)

    List Bookings was successfully retrieved.
   
    + Body 
    
            {
                "@namespaces": {
                    "tellus": {
                        "name": "/tellus/link-relations/"
                    }
                },
                
                "items": [
                    {
                        "name": "Stage",
                        "username": "Onur", 
                        "@controls": {
                            "self": {
                                "href": "/tellus/api/bookings/Stage/"
                            },
                            "profile": {
                                "href": "/profiles/booking_profile/"
                            }                            
                        }
                    },
                    {
                        "name": "Aspire",
                        "username": "Lam",
                        "@controls": {
                            "self": {
                                "href": "/tellus/api/booking/Aspire/"
                            },
                            "profile": {
                                "href": "/profiles/booking_profile/"
                            }                            
                        }
                    }
                ],
                
                "@controls": {
                    "self": {
                        "href": "/tellus/api/bookings/{name}/"
                    },
                    "tellus:add-booking" {
                        "title": "Create booking",
                        "href": "/forum/api/bookings/",
                        "encoding": "json",
                        "method": "POST",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "title": "User Name",
                                    "description": "Username of the booking's owner",
                                    "type": "string"
                                },
                                "bookingTime": {
                                    "title": "Booking Time",
                                    "description": "Date and time of the booking",
                                    "type": "string"
                                },
                                "email": {
                                    "title": "Email",
                                    "description": "Email of the booking's owner",
                                    "type": "string"
                                },
                                "familyName": {
                                    "title": "Family Name",
                                    "description": "Family Name of the booking's owner",
                                    "type": "string"
                                },
                                "givenName": {
                                    "title": "Given Name",
                                    "description": "Given Name of the booking's owner",
                                    "type": "string"
                                },
                                "telephone": {
                                    "title": "Telephone",
                                    "description": "Telephone number of the booking's owner",
                                    "type": "string"
                                },
                                "name": {
                                    "title": "Room name",
                                    "description": "Room name which the booking take place",
                                    "type": "string"
                                },
                            },
                            "required": ["username", "bookingTime", "name"]
                        }
                    },
                    "tellus:modify-booking" {
                        "title": "Create message",
                        "href": "/forum/api/messages/",
                        "encoding": "json",
                        "method": "PUT",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "title": "User Name",
                                    "description": "Username of the booking's owner",
                                    "type": "string"
                                },
                                "bookingTime": {
                                    "title": "Booking Time",
                                    "description": "Date and time of the booking",
                                    "type": "string"
                                },
                                "email": {
                                    "title": "Email",
                                    "description": "Email of the booking's owner",
                                    "type": "string"
                                },
                                "familyName": {
                                    "title": "Family Name",
                                    "description": "Family Name of the booking's owner",
                                    "type": "string"
                                },
                                "givenName": {
                                    "title": "Given Name",
                                    "description": "Given Name of the booking's owner",
                                    "type": "string"
                                },
                                "telephone": {
                                    "title": "Telephone",
                                    "description": "Telephone number of the booking's owner",
                                    "type": "string"
                                },
                                "name": {
                                    "title": "Room name",
                                    "description": "Room name which the booking take place",
                                    "type": "string"
                                },
                            },
                            "required": ["username", "bookingTime", "name"]
                        }
                    },
                    "tellus:delete" {
                        "title": "Create message",
                        "href": "/tellus/api/bookings/{booking_id}/"
                    },
                    "tellus:rooms-all" {
                        "title": "List rooms",
                        "href": "/tellus/api/rooms/"
                    }
                }
            }
     
+ Response 404 (application/vnd.mason+json)

    List Bookings is empty. No Booking by this room name. 
    
    + Body
    
            {
                "@error": {
                    "@message": "Empty list"
                    "@messages": [
                        "There is no booking for this room yet."
                    ]
                }
                "resource_url": "/tellus/api/bookings/Chill/"
            }


### Modify an existence booking [PUT]       

Modify an existence booking by room name, the time information will be change.  

+ Request (application/json)

    + Headers
    
            Accept: application/vnd.mason+json
        
    + Body 
    
            {
                "username": "YoungUno",
                "bookingTime": "2002-05-30T09:00:00+02:00",
                "email": "uyoung@cool.com",
                "familyName": "Young",
                "givenName": "Uno",
                "telephone": "4165971265"
                "name": "Aspire",
            }

+ Response 204

    The booking is modified correctly
        
    + Body

+ Response 400 (application/vnd.mason+json)

    The booking is not well formed. Some of the parameters is not correctly received. 
    
    + Body
    
            {
                "@error": {
                    "@message": "Wrong request format",
                    "@messages": [
                        "Be sure you include all mandatory properties"
                    ]
                }
                "resource_url: "/tellus/api/bookings/{name}/"
            }

+ Response 404 (application/vnd.mason+json)

    The booking with id `messageid` does not exist in the database.
        
    + Body 
    
            {
                "@error": {
                    "@message": "Message does not exist"
                    "@messages": [
                        "The wanted-changing booking is non-exist."
                    ]
                }
                "resource_url": "/tellus/api/bookings/{name}/"
            }

+ Response 415 (application/vnd.mason+json)

    The server cannot understand the format of the response.
    
    + Body 
    
            {
                "@error": {
                    "@message": "Unsupported media type"
                    "@messages": [
                        "Use a JSON compatible format"
                    ]
                }
                "resource_url": "/tellus/api/bookings/{name}/"
            }

+ Response 500  (application/vnd.mason+json)

    The server cannot store the booking in the database.
    
    + Body 

            {
                "@error": {
                    "@message": "Problem with the database"
                    "@messages": [
                        "Cannot access the database"
                    ]
                }
                "resource_url": "/tellus/api/bookings/{name}/"
            }


### Create a new booking [POST]       

Create a new booking. 

+ Request (application/json)

    + Headers
    
            Accept: application/vnd.mason+json
        
    + Body 
    
            {
                "username": "YoungUno",
                "bookingTime": "2002-05-30T09:00:00+02:00",
                "email": "uyoung@cool.com",
                "familyName": "Young",
                "givenName": "Uno",
                "telephone": "4165971265"
                "name": "Aspire",
            }

+ Response 201

    The booking is created correctly. 
        
    + Headers
                
            Location: URL of the new created resource

+ Response 400 (application/vnd.mason+json)

    The booking is not well formed. Some of the parameters is not correctly received. 
    
    + Body
    
            {
                "@error": {
                    "@message": "Wrong request format"
                    "@messages": [
                        "There is something wrong with the booking format."
                    ]
                }
                "resource_url": "/tellus/api/bookings/"
            }

+ Response 409 (application/vnd.mason+json)

    Try to create a new booking similar with an existence booking.
    
    + Body
    
            {
                "@error": {
                    "@message": "Conflict booking",
                    "@messages": [
                        "The new booking was conflicted with an existence booking."
                    ]
                }
                "resource_url: "/forum/api/bookings/"
            }

+ Response 415 (application/vnd.mason+json)

    The server cannot understand the format of the response.
    
    + Body 
    
            {
                "@error": {
                    "@message": "Unsupported media type"
                    "@messages": [
                        "Use a JSON compatible format"
                    ]
                }
                "resource_url": "/tellus/api/bookings/"
            }

+ Response 500  (application/vnd.mason+json)

    The server cannot store the booking in the database.
    
    + Body 

            {
                "@error": {
                    "@message": "Problem with the database"
                    "@messages": [
                        "Cannot access the database"
                    ]
                }
                "resource_url": "/tellus/api/bookings/"
            }


### Delete a booking [DELETE]

Delete a booking from the system

+ Request
    
    + Headers
    
            Accept: application/vnd.mason+json
    
+ Response 204

    The booking was successfully deleted
        
    + Body 
        

+ Response 404 (application/vnd.mason+json)

    The booking does not exist in the database.
        
    + Body 
    
            {
                "@error": {
                    "@message": "Booking does not exist"
                    "@messages": [
                        "There is no a booking to delete"
                    ]
                }
                "resource_url": "/tellus/api/bookings/{booking_id}/"
            }


## History Bookings [/tellus/api/bookings/history{?limit}]
Get a list of 30 latest successful bookings in the system

The limit parameter uses to create constrain of the number of successful booking returned.
Default value of 'limit' is 30 bookings.

+ Parameters

    + limit (number, optional) - The maximum number of bookings to return.
        + Default: `30`

### History [GET]

+ Relation: self
+ Request
    
    + Headers
    
            Accept: application/vnd.mason+json

+ Response 200 (application/vnd.mason+json)

    List Bookings was successfully retrieved.
   
    + Body 
    
            {
                "@namespaces": {
                    "tellus": {
                        "name": "/tellus/link-relations/"
                    }
                },
                
                "items": [
                    {
                        "name": "Stage",
                        "username": "Onur", 
                        "@controls": {
                            "self": {
                                "href": "/tellus/api/bookings/Stage/"
                            },
                            "profile": {
                                "href": "/profiles/booking_profile/"
                            }                            
                        }
                    },
                    {
                        "name": "Aspire",
                        "username": "Lam",
                        "@controls": {
                            "self": {
                                "href": "/tellus/api/booking/Aspire/"
                            },
                            "profile": {
                                "href": "/profiles/booking_profile/"
                            }                            
                        }
                    }
                ],
                
                "@controls": {
                    "self": {
                        "href": "/tellus/api/bookings/history/"
                    },
                    "tellus:history-bookings": {
                        "title": "Booking history",
                        "href": "/tellus/api/bookings/",
                        "encoding": "json",
                        "method": "GET",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "title": "User Name",
                                    "description": "Username of the booking's owner",
                                    "type": "string"
                                },
                                "bookingTime": {
                                    "title": "Booking Time",
                                    "description": "Date and time of the booking",
                                    "type": "string"
                                },
                                "email": {
                                    "title": "Email",
                                    "description": "Email of the booking's owner",
                                    "type": "string"
                                },
                                "familyName": {
                                    "title": "Family Name",
                                    "description": "Family Name of the booking's owner",
                                    "type": "string"
                                },
                                "givenName": {
                                    "title": "Given Name",
                                    "description": "Given Name of the booking's owner",
                                    "type": "string"
                                },
                                "telephone": {
                                    "title": "Telephone",
                                    "description": "Telephone number of the booking's owner",
                                    "type": "string"
                                },
                                "name": {
                                    "title": "Room name",
                                    "description": "Room name which the booking take place",
                                    "type": "string"
                                },
                            },
                            "required": ["username", "bookingTime", "name"]
                        }
                    },
                    "tellus:rooms-all" {
                        "title": "List rooms",
                        "href": "/tellus/api/rooms/"
                    }
                }
            }
     
+ Response 404 (application/vnd.mason+json)

    History Bookings is empty. Not any successful bookings in database. 
    
    + Body
    
            {
                "@error": {
                    "@message": "Empty list"
                    "@messages": [
                        "There is no booking for this room yet."
                    ]
                }
                "resource_url": "/tellus/api/bookings/history/"
            }